package loginportal;

import mainmenu.MainMenuWindow;
import adventurerush.User;
import game.Sprite;
import game.Store;
import java.awt.Rectangle;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public final class LoginPortalPrimaryWindow extends javax.swing.JFrame {

    // attributes
    private LoginPortal loginPortal;
    private boolean updatedAnything;
    private User loginSession;
    
    // connected JFrames
    private LoginPortalSecondaryWindow secondWindow;
    private MainMenuWindow followingWindow;
    
    // static variable to keep all the game sprites 
    private static ArrayList<Sprite> gameSprites;
    
    /**
     * Creates new form LoginPortalFrame
     */
    public LoginPortalPrimaryWindow() {
        loginPortal = new LoginPortal();
        updatedAnything = false;
        initComponents();
        loadSprites();
        loadRegisteredUsers();
        this.setVisible(true);
    }

    // getters 
    
    public ArrayList<User> getUserCredentials() {
        return loginPortal.getUserCredentials();
    }
    
    public User getSpecificUserCredentials(int userIndex) {
        return loginPortal.getSpecificUserCredentials(userIndex);
    }
    
    public User getLoginSession() {
        return loginSession;
    }

    // setters
    
    public void setLoginSession(User loginSession) {
        this.loginSession = loginSession;
    }
    
    // behavior 
    
    public void loadSprites() {
        gameSprites = new ArrayList();
        assert(gameSprites != null);
        File folder = new File("src/assets");
        File[] listFiles = folder.listFiles();
        for (int i = 0; i < listFiles.length; i++) {
            if (listFiles[i].getName().equals("src/assets/.DS_Store")) {
                continue;
            }
            gameSprites.add(new Sprite("src/assets" + listFiles[i].getName()));
        }
    }
    
    public void loadRegisteredUsers() {
        loginPortal.setUserCredentials(new ArrayList());
        Scanner scanner = null;
        try {
            scanner = new Scanner(new File("src/adventurerush/loginDetails.txt"));
        } catch (FileNotFoundException e) {
            // change this to some sort of graphical thing later on
            System.out.println("Invalid file path for the file containing information about the users. Please correct this file path and then try running the program again.");
            return;
        }
        int currentLine = 0;
        while (scanner.hasNextLine()) {
            String username = scanner.nextLine();
            String password = scanner.nextLine();
            int lastLevel = Integer.parseInt(scanner.nextLine());
            int currencyPossessed = Integer.parseInt(scanner.nextLine());
            ArrayList<Sprite> sprites = new ArrayList();
            String currentLineData = scanner.nextLine().trim();
            for (int i = 0; i < currentLineData.length(); i++) {
                if (currentLineData.charAt(i) == '1') {
                    sprites.add(gameSprites.get(i));
                }
            }
            User currentUser = new User(username, password, currentLine, lastLevel, currencyPossessed, sprites);
            loginPortal.addUserCredential(currentUser);
            currentLine++;
        }
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signInLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        usernameTextField = new javax.swing.JTextField();
        signInBtn = new javax.swing.JButton();
        signUpLabel = new javax.swing.JLabel();
        signUpBtn = new javax.swing.JButton();
        usernameStatusLabel = new javax.swing.JLabel();
        passwordStatusLabel = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signInLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 22)); // NOI18N
        signInLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signInLabel.setText("Adventure Rush");

        usernameLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        usernameLabel.setText("Username");

        passwordLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        passwordLabel.setText("Password");

        passwordTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        usernameTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        signInBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        signInBtn.setText("Sign In");
        signInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInBtnActionPerformed(evt);
            }
        });

        signUpLabel.setText("Don't have an account? Sign up today!");

        signUpBtn.setText("Create Account");
        signUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(signInBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(passwordLabel)
                                .addGap(34, 34, 34)
                                .addComponent(passwordStatusLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(usernameLabel)
                                .addGap(29, 29, 29)
                                .addComponent(usernameStatusLabel))
                            .addComponent(usernameTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(signInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(signUpLabel)
                        .addGap(18, 18, 18)
                        .addComponent(signUpBtn))
                    .addComponent(exitBtn))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(exitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameStatusLabel))
                .addGap(18, 18, 18)
                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordStatusLabel))
                .addGap(18, 18, 18)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(signInBtn)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUpBtn))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInBtnActionPerformed
        if (updatedAnything) {
            loadRegisteredUsers();
            updatedAnything = false;
        }
        
        usernameStatusLabel.setText("");
        passwordStatusLabel.setText("");
        
        String usernameEntered = usernameTextField.getText().trim();
        String passwordEntered = passwordTextField.getText().trim();

        if (usernameEntered.length() == 0 || passwordEntered.length() == 0) {
            if (usernameEntered.length() == 0) {
                usernameStatusLabel.setText("Enter a valid username!");
            } else { // passwordEntered.length() == 0
                passwordStatusLabel.setText("Enter a valid password!");
            }
            return;
        }
        
        usernameStatusLabel.setText("");
        passwordStatusLabel.setText("");
        
        int userIndex = loginPortal.findUser(usernameEntered);
        if (userIndex == -1) {
            // user not found
            usernameTextField.setText("");
            passwordTextField.setText("");
            usernameStatusLabel.setText("User not found!");
        } else {
            boolean loginProcedure = loginPortal.validateCredentials(userIndex, passwordEntered);
            if (loginProcedure) {
                // user found and correct password
                loginSession = loginPortal.getSpecificUserCredential(userIndex);
                loginTransition(userIndex);
            } else {
                // user found, but incorrect password
                passwordStatusLabel.setText("Incorrect password!");
                passwordTextField.setText("");
            }
        }
    }//GEN-LAST:event_signInBtnActionPerformed

    private void loginTransition(int userIndex) {
        if (followingWindow == null) {
            followingWindow = new MainMenuWindow(this, new Store());
        }
        final Rectangle bounds = this.getBounds();
        followingWindow.setLocation(bounds.x, bounds.y);
        followingWindow.setVisible(true);
        this.setVisible(false);
    }
    
    private void signUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpBtnActionPerformed
        if (secondWindow == null) {
            secondWindow = new LoginPortalSecondaryWindow(this);
        }
        usernameStatusLabel.setText("");
        passwordStatusLabel.setText("");
        secondWindow.setVisible(true);
        this.setVisible(false);
        updatedAnything = true;
    }//GEN-LAST:event_signUpBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPortalPrimaryWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPortalPrimaryWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPortalPrimaryWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPortalPrimaryWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPortalPrimaryWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordStatusLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton signInBtn;
    private javax.swing.JLabel signInLabel;
    private javax.swing.JButton signUpBtn;
    private javax.swing.JLabel signUpLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameStatusLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
