package game;

import adventurerush.ReaderWriter;
import adventurerush.User;
import java.awt.Image;
import java.awt.Rectangle;
import javax.swing.ImageIcon;
import mainmenu.MainMenuWindow;

public final class StoreWindowFrame extends javax.swing.JFrame {

    // attributes of a StoreWindowFrame object
    private final MainMenuWindow mainWindow;
    private int currentIndex;
    private final User currentUser;
    private final Store currentStore;
    private final ReaderWriter IOHandler;

    /**
     * Creates new form StoreWindowFrame
     * @param mainWindow
     */
    public StoreWindowFrame(MainMenuWindow mainWindow) {
        initComponents();

        this.mainWindow = mainWindow;
        this.currentStore = mainWindow.getCurrentStore().clone();
        currentStore.sortStoreItems();

        final Rectangle bounds = mainWindow.getBounds();
        this.setLocation(bounds.x, bounds.y);

        currentIndex = 0;
        currentUser = mainWindow.getCurrentUser();

        IOHandler = new ReaderWriter("src/adventurerush/loginDetails.txt");
        
        updateStatus();
        loadSpecificSprite();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prevBtn = new javax.swing.JToggleButton();
        nextBtn = new javax.swing.JToggleButton();
        buyBtn = new javax.swing.JToggleButton();
        leaveBtn = new javax.swing.JToggleButton();
        imageLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        defaultSpriteButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        prevBtn.setText("Previous Sprite");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next Sprite");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        leaveBtn.setText("Leave Store");
        leaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveBtnActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 22)); // NOI18N
        titleLabel.setText("Store");

        costLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        costLabel.setText("Cost:");

        defaultSpriteButton.setText("Set as Default Sprite");
        defaultSpriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultSpriteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(prevBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 428, Short.MAX_VALUE)
                        .addComponent(leaveBtn)
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(costLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(defaultSpriteButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(buyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(leaveBtn)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(prevBtn)
                        .addGap(57, 57, 57)
                        .addComponent(nextBtn)
                        .addGap(167, 167, 167))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(costLabel)
                        .addGap(119, 119, 119)
                        .addComponent(defaultSpriteButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        currentIndex--;
        if (currentIndex < 0) {
            currentIndex = currentStore.getStoreItems().size() - 1;
        }
        updateStatus();
        loadSpecificSprite();
    }//GEN-LAST:event_prevBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        currentIndex++;
        if (currentIndex > currentStore.getStoreItems().size() - 1) {
            currentIndex = 0;
        }
        updateStatus();
        loadSpecificSprite();
    }//GEN-LAST:event_nextBtnActionPerformed

    private void leaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveBtnActionPerformed
        this.setVisible(false);
        mainWindow.setVisible(true);
    }//GEN-LAST:event_leaveBtnActionPerformed

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        currentUser.setCurrencyPossessed(currentUser.getCurrencyPossessed() - currentStore.getSpecificStoreItem(currentIndex).getCostToPurchase());
        currentUser.addSprite(currentStore.getSpecificStoreItem(currentIndex));
        buyBtn.setEnabled(false);
        buyBtn.setText("Purchased");
        defaultSpriteButton.setEnabled(true);
        
        // update content in file 
        String currentSpriteSelection = IOHandler.readSpecificLine(currentUser.getCurrentFileLine());
        currentSpriteSelection = currentSpriteSelection.substring(0, currentIndex) + "1" + currentSpriteSelection.substring(currentIndex + 1); 
        IOHandler.replaceLine(currentUser.getCurrentFileLine(), currentSpriteSelection);
    }//GEN-LAST:event_buyBtnActionPerformed

    private void defaultSpriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultSpriteButtonActionPerformed
        currentUser.setDefaultSprite(currentStore.getSpecificStoreItem(currentIndex));
    }//GEN-LAST:event_defaultSpriteButtonActionPerformed

    public void loadSpecificSprite() {
        imageLabel.setIcon(scaleImage(currentStore.getSpecificStoreItem(currentIndex).getSpriteCharacter()));
    }

    public ImageIcon scaleImage(ImageIcon imageToBeScaled) {
        Image scaledImg = imageToBeScaled.getImage();
        scaledImg = scaledImg.getScaledInstance(imageToBeScaled.getIconWidth()*7, imageToBeScaled.getIconHeight()*7,  java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
        return new ImageIcon(scaledImg);
    }
    
    public void updateStatus() {
        System.out.println(currentUser.getSprites());
        // sets the text of the cost
        costLabel.setText("Cost: " + currentStore.getSpecificStoreItem(currentIndex).getCostToPurchase());

        // if the sprite is purchased
        if (userHasCurrentSprite()) {
            // disables the button
            buyBtn.setEnabled(false); 
            buyBtn.setText("Purchased");
            defaultSpriteButton.setEnabled(true);
        } else {  // if the sprite isn't purchased
            defaultSpriteButton.setEnabled(false);
            if (currentUser.getCurrencyPossessed() < currentStore.getSpecificStoreItem(currentIndex).getCostToPurchase()) {
                buyBtn.setEnabled(true);
                buyBtn.setText("Buy");
            } else {
                buyBtn.setEnabled(true);
                buyBtn.setText(Integer.toString(currentStore.getSpecificStoreItem(currentIndex).getCostToPurchase())); //Displays the cost of the sprite
            }
        }
    }
    
    private boolean userHasCurrentSprite() {
        for (Sprite currentSprite: currentUser.getSprites()) {
            if (currentSprite.equals(currentStore.getSpecificStoreItem(currentIndex))) {
                return true;
            }
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton buyBtn;
    private javax.swing.JLabel costLabel;
    private javax.swing.JToggleButton defaultSpriteButton;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JToggleButton leaveBtn;
    private javax.swing.JToggleButton nextBtn;
    private javax.swing.JToggleButton prevBtn;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
