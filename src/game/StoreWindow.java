package game;

import adventurerush.User;
import java.awt.Rectangle;
import java.util.ArrayList;
import javax.swing.JLabel;
import mainmenu.MainMenuWindow;

public class StoreWindow extends javax.swing.JFrame {
    
    private MainMenuWindow mainWindow;
    private int currentIndex;
    private User currentUser;
    private ArrayList<Sprite> spriteStore;

    /**
     * Creates new form StoreWindow
     * @param mainWindow
     */
    public StoreWindow(MainMenuWindow mainWindow) {
        initComponents();
        this.mainWindow = mainWindow;
        final Rectangle bounds = mainWindow.getBounds();
        this.setLocation(bounds.x, bounds.y);
        currentIndex = 0;
        currentUser = mainWindow.getCurrentUser();
        spriteStore = new ArrayList();
                
        //Sends the file path of the image to the addSprite method which will add the sprite to the array list containing all of the sprites
//        addSprite("src/game/Idle.png", 10, 10, 5, 10, 500, true);
//        addSprite("src/assets/10/Idle.png");
//        addSprite("src/assets/4/Idle.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        prevBtn = new javax.swing.JToggleButton();
        nextBtn = new javax.swing.JToggleButton();
        storeLabel = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        leaveStoreBtn = new javax.swing.JToggleButton();
        lblCost = new javax.swing.JLabel();
        btnBuy = new javax.swing.JToggleButton();
        costLabel = new javax.swing.JLabel();
        purchasedOrNotLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        prevBtn.setText("Previous Sprite");
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Next Sprite");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        storeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 22)); // NOI18N
        storeLabel.setText("Store");

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/1/Idle.png"))); // NOI18N

        leaveStoreBtn.setText("Leave Store");
        leaveStoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveStoreBtnActionPerformed(evt);
            }
        });

        lblCost.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        lblCost.setText("Cost:");

        btnBuy.setText("Buy");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(storeLabel)
                .addGap(207, 207, 207)
                .addComponent(leaveStoreBtn)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prevBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addComponent(lblImage)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(costLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCost)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(purchasedOrNotLabel)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(storeLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(prevBtn)
                                .addGap(45, 45, 45)
                                .addComponent(nextBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(lblCost)
                                .addGap(24, 24, 24)
                                .addComponent(purchasedOrNotLabel)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(leaveStoreBtn)
                .addGap(209, 209, 209)
                .addComponent(costLabel)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        currentIndex--;
        if (currentIndex < 0) {
            currentIndex = 2;
        }
        updateStatus();
        loadSpecificSprite();
    }                                       

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        currentIndex++;
        if (currentIndex > 2) {
            currentIndex = 0;
        }
        updateStatus();
        loadSpecificSprite();
    }                                       

    private void loadSpecificSprite() {
        Sprite currentSprite = null;
        lblImage = new JLabel(spriteStore.get(currentIndex).getSpriteCharacter());
    }
    
    private void leaveStoreBtnActionPerformed(java.awt.event.ActionEvent evt) {                                              
        mainWindow.setVisible(true);
        this.setVisible(false);
    }                                             

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {                                       
//        if (btnBuy.isEnabled() && ) {
//            
//        }
    }                                      

    /**
     * Adds each sprite to the spriteStore array list
     * @param path - The file path of the image
     */
    public void addSprite(String filePath, int xCoord, int yCoord, int spriteHeight, int spriteWidth, int costToPurchase, boolean purchasedAlready) {
        Sprite temp = new Sprite(filePath, xCoord, yCoord, spriteHeight, spriteWidth, costToPurchase, purchasedAlready);        
        //Adds the sprite to the arrayList that contains the rest of the sprites
        spriteStore.add(temp); 
    }
    
    /**
     * Checks if the sprite is purchased or if it isn't and displays the price
     */
    public void updateStatus() {
        // if the sprite is purchased
        if (spriteStore.get(currentIndex).getPurchasedAlready()) {
            btnBuy.setEnabled(false); //Disables the button
            btnBuy.setText("true");
        } else {  // if the sprite isn't purchased
            // don't have enough money
            if (currentUser.getCurrencyPossessed() < spriteStore.get(currentIndex).getCostToPurchase()) {
                
                return;
            }    
            btnBuy.setEnabled(true); //Enables the button
            btnBuy.setText(Integer.toString(spriteStore.get(currentIndex).getCostToPurchase())); //Displays the cost of the sprite
        }
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JToggleButton btnBuy;
    private javax.swing.JLabel costLabel;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblImage;
    private javax.swing.JToggleButton leaveStoreBtn;
    private javax.swing.JToggleButton nextBtn;
    private javax.swing.JToggleButton prevBtn;
    private javax.swing.JLabel purchasedOrNotLabel;
    private javax.swing.JLabel storeLabel;
    // End of variables declaration                   
}
